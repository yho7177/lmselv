package kr.happyjob.study.lmg.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.happyjob.study.lmg.model.HomeworkMgtModel;
import kr.happyjob.study.lmg.model.HomeworkSubModel;
import kr.happyjob.study.lmg.service.HomeworkService;

@Controller
@RequestMapping("/lmg/")
public class HomeworkController {
	
	@Autowired
	HomeworkService homeworkService;
	
	// Set logger
	private final Logger logger = LogManager.getLogger(this.getClass());
	
	// Get class name for logger
	private final String className = this.getClass().toString();
	
	//과제 조회 초기화면
	@RequestMapping("homework.do")
	public String initHomework(Model model, @RequestParam Map<String, Object>paramMap, 
			HttpServletRequest request, HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".initHomework");
		logger.info("   - paramMap : " + paramMap);
		
		String usertype = (String) session.getAttribute("userType");
		String  loginID = (String) session.getAttribute("loginId");
		
		paramMap.put("loginID", loginID);
		
		/* 과제 콤보박스 */
		List<HomeworkMgtModel> listHwMgtModel = homeworkService.initHomework(paramMap);
		model.addAttribute("listHwMgtModel", listHwMgtModel);
		
		model.addAttribute("usertype", usertype);
		model.addAttribute("loginID", loginID);
		
		
		logger.info("+ End " + className + ".initHomework");
		
		return "lmg/homework";
	}

	// 과제 목록 조회
	@RequestMapping("homeworkMgtList.do")
	public String listHomeworkMgt(Model model, @RequestParam Map<String, Object> paramMap, 
			HttpServletRequest request,	HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".listHomeworkMgt");
		logger.info("   - paramMap : " + paramMap);
		
		int currentPage = Integer.parseInt((String)paramMap.get("currentPage"));	// 현재 페이지 번호
		int pageSize = Integer.parseInt((String)paramMap.get("pageSize"));			// 페이지 사이즈
		int pageIndex = (currentPage-1)*pageSize;	
		
		paramMap.put("pageIndex", pageIndex);
		paramMap.put("pageSize", pageSize);
		
		// 과제 목록 조회
		List<HomeworkMgtModel> listHwMgtModel = homeworkService.listHomeworkMgt(paramMap);
		model.addAttribute("listHwMgtModel", listHwMgtModel);
		
		// 과제 목록 카운트 조회
		int totalCount = homeworkService.countListHomeworkMgt(paramMap);
		model.addAttribute("totalCntHwMgt", totalCount);
		
		model.addAttribute("pageSize", pageSize);
		model.addAttribute("currentPageHwMgt",currentPage);
		
		logger.info("+ End " + className + ".listHomeworkMgt");
		
		return "/lmg/homeworkMgtList";
	}
	
	/* 과제 목록 단건조회 */
	@RequestMapping("selectHwMgt.do")
	@ResponseBody
	public Map<String, Object> selectHwMgt (Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".selectHwMgt");
		logger.info("   - paramMap : " + paramMap);

		String result = "SUCCESS";
		String resultMsg = "조회 되었습니다.";
		
		HomeworkMgtModel homeworkMgtModel = homeworkService.selectHwMgt(paramMap);
		
		Map<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("result", result);
		resultMap.put("resultMsg", resultMsg);
		resultMap.put("homeworkMgtModel", homeworkMgtModel);
		
		logger.info("+ End " + className + ".selectHwMgt");
		
		return resultMap;
	}
	
	/* 과제 등록 저장 */
	@RequestMapping("saveHwMgt.do")
	@ResponseBody
	public Map<String, Object> saveHwMgt(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".saveHwMgt");
		logger.info("   - paramMap : " + paramMap);
		
		String action = (String)paramMap.get("action");
		
		String result = "SUCCESS";
		String resultMsg = "저장 되었습니다.";
		
		if ("I".equals(action)) {
			// 그룹코드 신규 저장
			logger.info("   - action : " + action);
			
			homeworkService.insertHwMgt(paramMap);
			
		} else if("U".equals(action)) {
			// 그룹코드 수정 저장
			logger.info("   - action : " + action);
			
			homeworkService.updateHwMgt(paramMap);
			
		} else {
			logger.info("   - action : " + action);
			result = "FALSE";
			resultMsg = "알수 없는 요청 입니다.";
		}
		
		Map<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("result", result);
		resultMap.put("resultMsg", resultMsg);
		
		logger.info("+ End " + className + ".saveHwMgt");
		
		return resultMap;
	}
	
	/* 과제 등록 삭제*/
	@RequestMapping("deleteHwMgt.do")
	@ResponseBody
	public Map<String, Object> deleteHwMgt(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".deleteHwMgt");
		logger.info("   - paramMap : " + paramMap);

		String result = "SUCCESS";
		String resultMsg = "삭제 되었습니다.";
		
		homeworkService.deleteHwMgt(paramMap);
		
		Map<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("result", result);
		resultMap.put("resultMsg", resultMsg);
		
		logger.info("+ End " + className + ".deleteHwMgt");
		
		return resultMap;
	}
	
	/* 과제 제출 목록 조회 */
	@RequestMapping("homeworkSubList.do")
	public String listHomeworkSub(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".listHomeworkSub");
		logger.info("   - paramMap : " + paramMap);
		
		int currentPage = Integer.parseInt((String)paramMap.get("currentPage"));	// 현재 페이지 번호
		int pageSize = Integer.parseInt((String)paramMap.get("pageSize"));			// 페이지 사이즈
		int pageIndex = (currentPage-1)*pageSize;												// 페이지 시작 row 번호
		
		paramMap.put("pageIndex", pageIndex);
		paramMap.put("pageSize", pageSize);
		
		// 과제 제출 목록 조회
		List<HomeworkSubModel> listHwSubModel = homeworkService.listHomeworkSub(paramMap);
		model.addAttribute("listHwSubModel", listHwSubModel);
		
		// 과제 제출 목록 카운트 조회
		int totalCount = homeworkService.countListHomeworkSub(paramMap);
		model.addAttribute("totalCntHwSub", totalCount);
		
		model.addAttribute("pageSize", pageSize);
		model.addAttribute("currentPageHwSub",currentPage);
		
		logger.info("+ End " + className + ".listHomeworkSub");

		return "/lmg/homeworkSubList";
	}
	
	/* 과제 제출 목록 단건조회 */
	@RequestMapping("selectHwSub.do")
	@ResponseBody
	public Map<String, Object> selectHwSub (Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".selectHwSub");
		logger.info("   - paramMap : " + paramMap);

		String result = "SUCCESS";
		String resultMsg = "조회 되었습니다.";
		
		HomeworkSubModel homeworkSubModel = homeworkService.selectHwSub(paramMap);
		
		Map<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("result", result);
		resultMap.put("resultMsg", resultMsg);
		resultMap.put("homeworkSubModel", homeworkSubModel);
		
		logger.info("+ End " + className + ".selectHwSub");
		
		return resultMap;
	}
	
	/*saveHwSub*/
}
