<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.cmg.dao.CommodityDao">

	<!-- 강의실 목록 조회 -->
	<select id="commodityList" resultType="kr.happyjob.study.cmg.model.CommodityModel">
		SELECT r_no as rNo,
		       r_name as rName,
		       r_size as rSize,
		       r_sit as rSit,
		       r_content as rContent
		  FROM tb_room
         <where>
			 <if test="(srName != null) and (!srName.equals(''))">
			      AND r_name LIKE CONCAT('%',#{srName},'%')
			 </if>
		</where>
		 ORDER BY r_no DESC
		 LIMIT #{pageIndex}, #{pageSize}
	</select>


	<!-- 목록 총 갯수 조회 -->
	<select id="commodityCnt" resultType="int">
		/*kr.happy.study.cmg.dao.CommodityDao.commodityCnt*/
		SELECT COUNT(*)
		  FROM tb_room
         <where>
			 <if test="(srName != null) and (!srName.equals(''))">
			      AND r_name LIKE CONCAT('%',#{srName},'%')
			 </if>
		</where>
	</select>
	
	<!-- 강의실 단건 조회 : 강의실번호 클릭시 -->
	<select id = "commodityDetail" resultType = "kr.happyjob.study.cmg.model.CommodityModel">
		SELECT
				r_no as rNo,
				r_name as rName,
				r_size as rSize,
				r_sit as rSit,
				r_content as rContent
		FROM	tb_room 
		WHERE   r_no = #{rNo}
	</select>

	<!-- 강의실 신규등록(저장) : -->
	<insert id="insertCommodity" parameterType="java.util.Map">
		<selectKey resultType="string" keyProperty="rNo" order="BEFORE">
			SELECT IFNULL(MAX(r_no),0) + 1 FROM tb_room
		</selectKey>
		INSERT
		INTO tb_room
		(
		r_no, r_name, r_size, r_sit, r_content
		)
		VALUES
		(
		  #{rNo}
		, #{rName}
		, #{rSize}
		, #{rSit}
		, #{rContent}
		)
	</insert>

	<!-- 강의실 수정 -->
	<update id="updateCommodity">
		UPDATE tb_room
		SET 
		r_no = #{rNo}
		,r_name = #{rName}
		, r_size = #{rSize}
		, r_sit = #{rSit}
		, r_content = #{rContent}
		WHERE r_no = #{rNo}
	</update>
	
	<!-- 공지사항 삭제-->
	<delete id="deleteCommodity">
		DELETE
		FROM 	tb_room
		WHERE 	r_no = #{rNo}
	</delete>


	<!-- 장비 목록 조회 -->
	<select id="itemList" resultType="kr.happyjob.study.cmg.model.ItemListDTL">
	/*kr.happyjob.study.cmg.model.ItemListDTL*/
		SELECT	
			@rownum:=@rownum+1 as row_num	
			,ta.r_no
			,tb.r_name
			,ta.i_no
			,ta.i_name
			,ta.i_cnt
			,ta.i_content
		FROM tb_item ta
			,tb_room tb
		WHERE (@rownum:=0)=0
			AND ta.r_no = tb.r_no
			AND ta.r_no = #{r_no}
		ORDER BY ta.i_no desc
		<if test="(pageIndex != null) and (!pageIndex.equals('')) and (pageSize != null) and (!pageSize.equals(''))">
		LIMIT #{pageIndex}, #{pageSize}
		</if>
	</select>
	
	<!-- 장비 단건 조회 -->
	<select id = "selectItem" resultType = "kr.happyjob.study.cmg.model.ItemListDTL">
	/*kr.happyjob.study.cmg.model.ItemListDTL*/
		SELECT
				i_no,
				r_no,
				i_name,
				i_content,
				i_cnt
		FROM	tb_item
		WHERE   i_no = #{i_no}
	</select>
	
	<!-- 장비 저장 -->
	<insert id="insertItemList">
	/*insertItemList*/
		INSERT INTO 
		    tb_item(
			i_no,
			r_no,
			i_name,
			i_cnt,
			i_content
		)
		VALUES(
			#{i_no},
			#{r_no},
			#{i_name},
			#{i_cnt},
			#{i_content}
		)
	</insert>
	
	<!-- 장비 수정 -->
	<update id="updateItemList">
	/*updateItemList*/
		UPDATE tb_item
		SET    i_name = #{i_name},
			   i_cnt = #{i_cnt},
			   i_content = #{i_content}
		WHERE  r_no = #{r_no}
		AND    i_no = #{i_no}
	</update>
	
	<!-- 장비 삭제 -->
	<delete id="itemDelete">
	/*deleteItemLis*/
		DELETE FROM tb_item
		WHERE  r_no = #{r_no}
		AND    i_no = #{i_no}
	</delete>
	
	<!-- 장비 카운트 -->
	<select id="itemListCount" resultType="int">
	/*deleteItemLis*/
		SELECT count(1) AS tot_cnt 
		FROM   tb_item
		WHERE  r_no = #{r_no}
	</select>

</mapper>

